// <auto-generated />
using System;
using KalkulosCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KalkulosCore.Migrations
{
    [DbContext(typeof(KuotasDbContext))]
    [Migration("20250611221511_CreateIdentitySchema")]
    partial class CreateIdentitySchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("KalkulosCore.Models.Acreedore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("APELLIDOS");

                    b.Property<string>("Direccion")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("DIRECCION");

                    b.Property<int?>("Documento")
                        .HasColumnType("int")
                        .HasColumnName("DOCUMENTO");

                    b.Property<string>("Nombres")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("NOMBRES");

                    b.Property<string>("Telcelular")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("TELCELULAR");

                    b.Property<string>("Telfijo")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("TELFIJO");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("ACREEDORES", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.AuditoriaPrestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ACCION");

                    b.Property<DateTime?>("Modificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("MODIFICACION");

                    b.Property<int>("Operacion")
                        .HasColumnType("int")
                        .HasColumnName("OPERACION");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("USUARIO_ID");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("AUDITORIA_PRESTAMOS", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Calculadora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Texto")
                        .HasColumnType("longtext")
                        .HasColumnName("texto");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("calculadora", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Cliente", b =>
                {
                    b.Property<int>("Idcliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Idcliente"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DIRECCION");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nombres")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NOMBRES");

                    b.Property<string>("Telcelular")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("TELCELULAR");

                    b.Property<string>("Telfijo")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("TELFIJO");

                    b.HasKey("Idcliente")
                        .HasName("PRIMARY");

                    b.ToTable("CLIENTES", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Cuota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Capital")
                        .HasColumnType("double")
                        .HasColumnName("CAPITAL");

                    b.Property<string>("Estado")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ESTADO");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    b.Property<string>("Moneda")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MONEDA");

                    b.Property<double?>("Monto")
                        .HasColumnType("double")
                        .HasColumnName("MONTO");

                    b.Property<int?>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<int?>("Numerodepago")
                        .HasColumnType("int")
                        .HasColumnName("NUMERODEPAGO");

                    b.Property<int?>("Operacion")
                        .HasColumnType("int")
                        .HasColumnName("OPERACION");

                    b.Property<int?>("OperacionNavigationOperacion")
                        .HasColumnType("int");

                    b.Property<double?>("Pago")
                        .HasColumnType("double")
                        .HasColumnName("PAGO");

                    b.Property<string>("Tipodecuotas")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPODECUOTAS");

                    b.Property<string>("Tipooperacion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPOOPERACION");

                    b.Property<DateTime?>("Vence")
                        .HasColumnType("datetime")
                        .HasColumnName("VENCE");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("OperacionNavigationOperacion");

                    b.ToTable("CUOTAS", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.CuotasBorrada", b =>
                {
                    b.Property<float?>("Capital")
                        .HasColumnType("float")
                        .HasColumnName("CAPITAL");

                    b.Property<string>("Estado")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ESTADO");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    b.Property<string>("Moneda")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MONEDA");

                    b.Property<int?>("Monto")
                        .HasColumnType("int")
                        .HasColumnName("MONTO");

                    b.Property<int?>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<int?>("Numerodepago")
                        .HasColumnType("int")
                        .HasColumnName("NUMERODEPAGO");

                    b.Property<int?>("Operacion")
                        .HasColumnType("int")
                        .HasColumnName("OPERACION");

                    b.Property<int?>("Pago")
                        .HasColumnType("int")
                        .HasColumnName("PAGO");

                    b.Property<string>("Tipodecuotas")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPODECUOTAS");

                    b.Property<string>("Tipooperacion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPOOPERACION");

                    b.Property<DateTime?>("Vence")
                        .HasColumnType("datetime")
                        .HasColumnName("VENCE");

                    b.ToTable("CUOTAS_BORRADAS", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.CuotasRespaldo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Capital")
                        .HasColumnType("double")
                        .HasColumnName("CAPITAL");

                    b.Property<string>("Estado")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ESTADO");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    b.Property<string>("Moneda")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MONEDA");

                    b.Property<double?>("Monto")
                        .HasColumnType("double")
                        .HasColumnName("MONTO");

                    b.Property<int?>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<int?>("Numerodepago")
                        .HasColumnType("int")
                        .HasColumnName("NUMERODEPAGO");

                    b.Property<int?>("Operacion")
                        .HasColumnType("int")
                        .HasColumnName("OPERACION");

                    b.Property<double?>("Pago")
                        .HasColumnType("double")
                        .HasColumnName("PAGO");

                    b.Property<string>("Tipodecuotas")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPODECUOTAS");

                    b.Property<string>("Tipooperacion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPOOPERACION");

                    b.Property<DateTime?>("Vence")
                        .HasColumnType("datetime")
                        .HasColumnName("VENCE");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("CUOTAS_RESPALDO", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.EstadoSituacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CashDolares")
                        .HasPrecision(18)
                        .HasColumnType("decimal(18)");

                    b.Property<decimal?>("CashPesos")
                        .HasPrecision(18)
                        .HasColumnType("decimal(18)");

                    b.Property<int?>("CodigoMovimiento")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoOperacion")
                        .HasColumnType("int");

                    b.Property<string>("Concepto")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date");

                    b.Property<double?>("MontoDolares")
                        .HasColumnType("double");

                    b.Property<double?>("MontoUi")
                        .HasColumnType("double")
                        .HasColumnName("MontoUI");

                    b.Property<string>("TipoDeCuotas")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("ESTADO_SITUACION", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.HistorialAcceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Ingreso")
                        .HasColumnType("datetime")
                        .HasColumnName("INGRESO");

                    b.Property<DateTime?>("Salida")
                        .HasColumnType("datetime")
                        .HasColumnName("SALIDA");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("USUARIO_ID");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("HISTORIAL_ACCESOS", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.HistorialPrestamo", b =>
                {
                    b.Property<double?>("Capital")
                        .HasColumnType("double")
                        .HasColumnName("CAPITAL");

                    b.Property<double?>("Capitalinicial")
                        .HasColumnType("double")
                        .HasColumnName("CAPITALINICIAL");

                    b.Property<string>("Carpeta")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CARPETA");

                    b.Property<string>("Comentarios")
                        .HasColumnType("text")
                        .HasColumnName("COMENTARIOS");

                    b.Property<double?>("Cuotas")
                        .HasColumnType("double")
                        .HasColumnName("CUOTAS");

                    b.Property<string>("Dadorenprenda")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DADORENPRENDA");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<string>("Hipotecante")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("HIPOTECANTE");

                    b.Property<int?>("Idacreedor")
                        .HasColumnType("int")
                        .HasColumnName("IDACREEDOR");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    b.Property<string>("Lugardepago")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("LUGARDEPAGO");

                    b.Property<string>("Moneda")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MONEDA");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("OBSERVACIONES");

                    b.Property<int>("Operacion")
                        .HasColumnType("int")
                        .HasColumnName("OPERACION");

                    b.Property<string>("Padronhipotecario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("PADRONHIPOTECARIO");

                    b.Property<string>("Primervencimiento")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("PRIMERVENCIMIENTO");

                    b.Property<DateTime>("SysEndTime")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("SysStartTime")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("Tea")
                        .HasColumnType("double")
                        .HasColumnName("TEA");

                    b.Property<double?>("Tem")
                        .HasColumnType("double")
                        .HasColumnName("TEM");

                    b.Property<string>("Tipodecuotas")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPODECUOTAS");

                    b.Property<string>("Tipodevencimiento")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPODEVENCIMIENTO");

                    b.Property<string>("Tipogarantia")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPOGARANTIA");

                    b.Property<string>("Tipooperacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPOOPERACION");

                    b.Property<double?>("Tmora")
                        .HasColumnType("double")
                        .HasColumnName("TMORA");

                    b.Property<string>("Vehiculoprendado")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("VEHICULOPRENDADO");

                    b.Property<string>("Vencimientofinal")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("VENCIMIENTOFINAL");

                    b.ToTable("HISTORIAL_PRESTAMOS", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Imprimircuota", b =>
                {
                    b.Property<string>("Capital")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("CAPITAL");

                    b.Property<string>("Cuotaenpesos")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("CUOTAENPESOS");

                    b.Property<string>("Cuotasenui")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("CUOTASENUI");

                    b.Property<string>("Meses")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("MESES");

                    b.ToTable("IMPRIMIRCUOTAS", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Imprimirliquidacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Concepto")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CONCEPTO");

                    b.Property<string>("Dias")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DIAS");

                    b.Property<string>("Fechahasta")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FECHAHASTA");

                    b.Property<string>("Fechainicio")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FECHAINICIO");

                    b.Property<double?>("Monto")
                        .HasColumnType("double")
                        .HasColumnName("MONTO");

                    b.Property<double?>("Mora")
                        .HasColumnType("double")
                        .HasColumnName("MORA");

                    b.Property<double?>("Total")
                        .HasColumnType("double")
                        .HasColumnName("TOTAL");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("IMPRIMIRLIQUIDACION", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Manuale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Archivo")
                        .HasColumnType("longblob")
                        .HasColumnName("ARCHIVO");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NOMBRE");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("MANUALES", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    b.Property<int?>("Idcuota")
                        .HasColumnType("int")
                        .HasColumnName("IDCUOTA");

                    b.Property<double?>("Monto")
                        .HasColumnType("double")
                        .HasColumnName("MONTO");

                    b.Property<int?>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<int?>("Operacion")
                        .HasColumnType("int")
                        .HasColumnName("OPERACION");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPO");

                    b.Property<string>("Tipocuota")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPOCUOTA");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("PAGOS", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.PagosBorrado", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    b.Property<int?>("Idcuota")
                        .HasColumnType("int")
                        .HasColumnName("IDCUOTA");

                    b.Property<float?>("Monto")
                        .HasColumnType("float")
                        .HasColumnName("MONTO");

                    b.Property<int?>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<int?>("Operacion")
                        .HasColumnType("int")
                        .HasColumnName("OPERACION");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPO");

                    b.Property<string>("Tipocuota")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPOCUOTA");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("PAGOS_BORRADOS", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Pagosrespaldo", b =>
                {
                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    b.Property<int?>("Idcuota")
                        .HasColumnType("int")
                        .HasColumnName("IDCUOTA");

                    b.Property<double?>("Monto")
                        .HasColumnType("double")
                        .HasColumnName("MONTO");

                    b.Property<int?>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO");

                    b.Property<int?>("Operacion")
                        .HasColumnType("int")
                        .HasColumnName("OPERACION");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPO");

                    b.Property<string>("Tipocuota")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPOCUOTA");

                    b.ToTable("PAGOSRESPALDO", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Pagostotal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    b.Property<double?>("Monto")
                        .HasColumnType("double")
                        .HasColumnName("MONTO");

                    b.Property<string>("NombreDeudor")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOMBRE_DEUDOR");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("PAGOSTOTAL", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Pdfoperacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Archivo")
                        .HasColumnType("longblob")
                        .HasColumnName("ARCHIVO");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    b.Property<int?>("Idoperacion")
                        .HasColumnType("int")
                        .HasColumnName("IDOPERACION");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NOMBRE");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("PDFOPERACION", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Prestamo", b =>
                {
                    b.Property<int>("Operacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OPERACION");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Operacion"));

                    b.Property<double?>("Capital")
                        .HasColumnType("double")
                        .HasColumnName("CAPITAL");

                    b.Property<double?>("Capitalinicial")
                        .HasColumnType("double")
                        .HasColumnName("CAPITALINICIAL");

                    b.Property<string>("Carpeta")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CARPETA");

                    b.Property<string>("Comentarios")
                        .HasColumnType("text")
                        .HasColumnName("COMENTARIOS");

                    b.Property<double?>("Cuotas")
                        .HasColumnType("double")
                        .HasColumnName("CUOTAS");

                    b.Property<string>("Dadorenprenda")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DADORENPRENDA");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<string>("Hipotecante")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("HIPOTECANTE");

                    b.Property<int?>("Idacreedor")
                        .HasColumnType("int")
                        .HasColumnName("IDACREEDOR");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    b.Property<string>("Lugardepago")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("LUGARDEPAGO");

                    b.Property<string>("Moneda")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MONEDA");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("OBSERVACIONES");

                    b.Property<string>("Padronhipotecario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("PADRONHIPOTECARIO");

                    b.Property<string>("Primervencimiento")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("PRIMERVENCIMIENTO");

                    b.Property<DateTime>("SysEndTime")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("'9999-12-31 23:59:59.999999'");

                    b.Property<DateTime>("SysStartTime")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<double?>("Tea")
                        .HasColumnType("double")
                        .HasColumnName("TEA");

                    b.Property<double?>("Tem")
                        .HasColumnType("double")
                        .HasColumnName("TEM");

                    b.Property<string>("Tipodecuotas")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPODECUOTAS");

                    b.Property<string>("Tipodevencimiento")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPODEVENCIMIENTO");

                    b.Property<string>("Tipogarantia")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPOGARANTIA");

                    b.Property<string>("Tipooperacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPOOPERACION");

                    b.Property<double?>("Tmora")
                        .HasColumnType("double")
                        .HasColumnName("TMORA");

                    b.Property<string>("Vehiculoprendado")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("VEHICULOPRENDADO");

                    b.Property<string>("Vencimientofinal")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("VENCIMIENTOFINAL");

                    b.HasKey("Operacion")
                        .HasName("PRIMARY");

                    b.ToTable("PRESTAMO", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.PrestamoRespaldo", b =>
                {
                    b.Property<int>("Operacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OPERACION");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Operacion"));

                    b.Property<double?>("Capital")
                        .HasColumnType("double")
                        .HasColumnName("CAPITAL");

                    b.Property<double?>("Capitalinicial")
                        .HasColumnType("double")
                        .HasColumnName("CAPITALINICIAL");

                    b.Property<string>("Carpeta")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CARPETA");

                    b.Property<string>("Comentarios")
                        .HasColumnType("text")
                        .HasColumnName("COMENTARIOS");

                    b.Property<double?>("Cuotas")
                        .HasColumnType("double")
                        .HasColumnName("CUOTAS");

                    b.Property<string>("Dadorenprenda")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DADORENPRENDA");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<string>("Hipotecante")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("HIPOTECANTE");

                    b.Property<int?>("Idacreedor")
                        .HasColumnType("int")
                        .HasColumnName("IDACREEDOR");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    b.Property<string>("Lugardepago")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("LUGARDEPAGO");

                    b.Property<string>("Moneda")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MONEDA");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("OBSERVACIONES");

                    b.Property<string>("Padronhipotecario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("PADRONHIPOTECARIO");

                    b.Property<string>("Primervencimiento")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("PRIMERVENCIMIENTO");

                    b.Property<double?>("Tea")
                        .HasColumnType("double")
                        .HasColumnName("TEA");

                    b.Property<double?>("Tem")
                        .HasColumnType("double")
                        .HasColumnName("TEM");

                    b.Property<string>("Tipodecuotas")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPODECUOTAS");

                    b.Property<string>("Tipodevencimiento")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPODEVENCIMIENTO");

                    b.Property<string>("Tipogarantia")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPOGARANTIA");

                    b.Property<string>("Tipooperacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPOOPERACION");

                    b.Property<double?>("Tmora")
                        .HasColumnType("double")
                        .HasColumnName("TMORA");

                    b.Property<string>("Vehiculoprendado")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("VEHICULOPRENDADO");

                    b.Property<string>("Vencimientofinal")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("VENCIMIENTOFINAL");

                    b.HasKey("Operacion")
                        .HasName("PRIMARY");

                    b.ToTable("PRESTAMO_RESPALDO", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.PrestamosBorrado", b =>
                {
                    b.Property<int>("Operacion")
                        .HasColumnType("int")
                        .HasColumnName("OPERACION");

                    b.Property<float?>("Capital")
                        .HasColumnType("float")
                        .HasColumnName("CAPITAL");

                    b.Property<float?>("Capitalinicial")
                        .HasColumnType("float")
                        .HasColumnName("CAPITALINICIAL");

                    b.Property<string>("Carpeta")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CARPETA");

                    b.Property<string>("Comentarios")
                        .HasColumnType("text")
                        .HasColumnName("COMENTARIOS");

                    b.Property<float?>("Cuotas")
                        .HasColumnType("float")
                        .HasColumnName("CUOTAS");

                    b.Property<string>("Dadorenprenda")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DADORENPRENDA");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<string>("Hipotecante")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("HIPOTECANTE");

                    b.Property<int?>("Idacreedor")
                        .HasColumnType("int")
                        .HasColumnName("IDACREEDOR");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCLIENTE");

                    b.Property<string>("Lugardepago")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("LUGARDEPAGO");

                    b.Property<string>("Moneda")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MONEDA");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("OBSERVACIONES");

                    b.Property<string>("Padronhipotecario")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("PADRONHIPOTECARIO");

                    b.Property<string>("Primervencimiento")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("PRIMERVENCIMIENTO");

                    b.Property<float?>("Tea")
                        .HasColumnType("float")
                        .HasColumnName("TEA");

                    b.Property<float?>("Tem")
                        .HasColumnType("float")
                        .HasColumnName("TEM");

                    b.Property<string>("Tipodecuotas")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPODECUOTAS");

                    b.Property<string>("Tipodevencimiento")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPODEVENCIMIENTO");

                    b.Property<string>("Tipogarantia")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPOGARANTIA");

                    b.Property<string>("Tipooperacion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPOOPERACION");

                    b.Property<float?>("Tmora")
                        .HasColumnType("float")
                        .HasColumnName("TMORA");

                    b.Property<string>("Vehiculoprendado")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("VEHICULOPRENDADO");

                    b.Property<string>("Vencimientofinal")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("VENCIMIENTOFINAL");

                    b.HasKey("Operacion")
                        .HasName("PRIMARY");

                    b.ToTable("PRESTAMOS_BORRADOS", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Solicitude", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Estado")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ESTADO");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA");

                    b.Property<string>("Garantia")
                        .HasColumnType("text")
                        .HasColumnName("GARANTIA");

                    b.Property<string>("Monto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("MONTO");

                    b.Property<string>("Nombre")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("Telefono")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TELEFONO");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("SOLICITUDES", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contraseña")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CONTRASEÑA");

                    b.Property<string>("Nombre")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPO");

                    b.Property<string>("Usuario1")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USUARIO");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Usuario1" }, "UQ_USUARIO_USUARIO")
                        .IsUnique();

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("KalkulosCore.Models.Cuota", b =>
                {
                    b.HasOne("KalkulosCore.Models.Prestamo", "OperacionNavigation")
                        .WithMany("Cuota")
                        .HasForeignKey("OperacionNavigationOperacion");

                    b.Navigation("OperacionNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KalkulosCore.Models.Prestamo", b =>
                {
                    b.Navigation("Cuota");
                });
#pragma warning restore 612, 618
        }
    }
}
